const e=document.createElement("template");let n;e.innerHTML='\n<style>\n  :host {\n    display: inline-block;\n  }\n  .sparkly {\n    position: relative;\n    display: inline-block;\n    line-height: 1em;\n  }\n  .sparkly .wrap {\n    display: block;\n    position: absolute;\n    left: 0;\n    z-index: 2;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n  }\n  @media (prefers-reduced-motion: no-preference) {\n    .sparkly .content {\n      animation: comeInOut 900ms ease 0s 1 normal forwards;\n    }\n  }\n  @media (prefers-reduced-motion: reduce) {\n    .sparkly .content {\n      animation: none;\n    }\n  }\n  @media (prefers-reduced-motion: no-preference) {\n    .sparkly svg {\n      animation: spin 1000ms linear 0s 1 normal none;\n    }\n  }\n  @media (prefers-reduced-motion: reduce) {\n    .sparkly svg {\n      animation: none;\n    }\n  }\n  @keyframes comeInOut {\n    0% {\n      transform: scale(0);\n    }\n\n    50% {\n      transform: scale(1);\n    }\n\n    100% {\n      transform: scale(0);\n    }\n  }\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n</style>\n\n<div class="sparkly">\n  <span @click="toggleClick">\n    <slot></slot>\n  </span>\n</div>\n';class t extends HTMLElement{static register(e="sparkly-view"){customElements.define(e,t)}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(e.content.cloneNode(!0)),this.container=this.shadowRoot.querySelector(".sparkly")}get canclick(){return this.getAttribute("canclick")||!1}set canclick(e){this.setAttribute("canclick",e)}get color(){return this.getAttribute("color")||"#FFC700"}set color(e){this.setAttribute("color",e)}get minsize(){return this.getAttribute("minsize")||10}set minsize(e){this.setAttribute("minsize",e)}get maxsize(){return this.getAttribute("maxsize")||20}set maxsize(e){this.setAttribute("maxsize",e)}connectedCallback(){let e=!1,t=document.createElement("span");const{toggleSpark:o}=function(e,{color:t,minsize:o,maxsize:i},a){let l=Array(3).fill("").map((()=>r(e,t,o,i)));const c=()=>{const n=r(e,t,o,i),s=Date.now();l.forEach((n=>{s-n.createdAt>750&&(n.remove=!0,e.removeChild(n.dom))})),l=l.filter((e=>!e.remove)).concat(n)};let m=null;const d=n=>{n&&"end"===n||m?(window.clearInterval(m),m=null,a.removeChild(e),e=document.createElement("span"),l=[]):(a.appendChild(e),m=window.setInterval(c,s(200,450)))};return window.addEventListener("beforeunload",(()=>{n.unobserve(a),d("end")})),{Sparkles:l,toggleSpark:d}}(t,{color:this.color,minsize:this.minsize,maxsize:this.maxsize},this.container);this.canclick&&this.container.addEventListener("click",(()=>{e=!e,o()})),n=new IntersectionObserver((n=>{n.forEach((n=>{e||(n.isIntersecting?o("start"):o("end"))}))})),n.observe(this.container)}}function s(e,n){return e=Number.parseFloat(e),n=Number.parseFloat(n),Math.floor(Math.random()*(n-e))+e}function r(e,n,t,r){const o={id:String(s(1e4,99999)),createdAt:Date.now(),color:n,size:s(t,r),style:{top:s(0,100)+"%",left:s(0,100)+"%","z-index":s(-1,2),"animation-delay":s(50,500)+"ms"}};return o.dom=document.createElement("span"),Object.keys(o.style).forEach((e=>{o.dom.style.setProperty(e,o.style[e])})),o.dom.className="wrap",o.dom.innerHTML=`\n    <svg width=${o.size} height=${o.size} viewBox="0 0 184 184" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path\n        d="M92 0C92 0 96 63.4731 108.263 75.7365C120.527 88 184 92 184 92C184 92 118.527 98 108.263 108.263C98 118.527 92 184 92 184C92 184 86.4731 119 75.7365 108.263C65 97.5269 0 92 0 92C0 92 63.9731 87.5 75.7365 75.7365C87.5 63.9731 92 0 92 0Z"\n        fill='${o.color}'\n      />\n    </svg>\n`,e.appendChild(o.dom),o}export{t as default};
